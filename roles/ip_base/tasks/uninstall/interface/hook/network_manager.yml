- name: Determine Network Manager dispatcher hooks.
  ansible.builtin.set_fact:
    hook_templates: |-
      {%- set hook_templates = [] -%}
      {%- for interface in eseries_ip_base_interfaces -%}
        {%- for template in interface['hook_templates'] | default(eseries_ip_base_default_hook_templates) -%}
          {%- set filename = template.split(".")[0] ~ "-" ~ interface["name"] -%}
          {%- if hook_templates.append({"filename": filename, "template": template, "interface": interface}) -%}{%- endif -%}
        {%- endfor -%}
      {%- endfor -%}
      {{- hook_templates -}}

# Determine whether Network Manager dispatcher hooks need to be changed.
- name: Get link status for interfaces.
  ansible.builtin.command: "ip -4 address show {{ item['name'] }}"
  changed_when: false
  register: link_info
  loop: "{{ eseries_ip_base_interfaces }}"
  become: true

# Determine whether existing Network Manager dispatcher hooks need to be changed.
- name: Check for existing Network Manager dispatcher hooks.
  ansible.builtin.stat:
    path: "{{ eseries_ip_base_network_manager_dispatcher_d }}{{ item['filename'] }}"
  register: hook_templates_stats
  loop: "{{ hook_templates }}"

- name: Send down action to existing Network Manager dispatcher hooks.
  ansible.builtin.command: "{{ item }}"
  loop: '{{ hook_commands }}'
  vars:
    hook_commands: |-
      {%- set hook_commands = [] -%}

      {#- Determine any interfaces that are UP -#}
      {%- for link_info in link_info["results"] if "state UP" in link_info["stdout"] -%}
        {%- set interface = link_info["item"]["name"] -%}

        {#- Determine which UP interfaces -#}
        {%- for hook_template_stat in hook_templates_stats["results"] if hook_template_stat["item"]["interface"]["name"] == interface -%}
          {%- set template = hook_template_stat["item"]["template"] -%}
          {%- set hook_path = eseries_ip_base_network_manager_dispatcher_d ~ hook_template_stat["item"]["filename"] -%}

          {#- Add down action command for existing hook on an UP interface -#}
          {%- if hook_template_stat["stat"]["exists"] -%}
            {%- if hook_commands.append(hook_path ~ " " ~ interface ~ " down") -%}{%- endif -%}
          {%- endif -%}
        {%- endfor -%}
      {%- endfor -%}
      {{- hook_commands -}}

- name: Delete Network Manager dispatcher hooks.
  ansible.builtin.file:
    state: absent
    path: "{{ eseries_ip_base_network_manager_dispatcher_d }}{{ item['filename'] }}"
  loop: "{{ hook_templates }}"
  become: true
