- name: "Ensure multipath has been added to {{ eseries_multipath_dracut_conf_d }}eseries_multipath.conf file."
  ansible.builtin.template:
    src: "{{ lookup('netapp_eseries.host.eseries_template_path', 'configure/eseries_multipath_conf.j2') }}"
    dest: "{{ eseries_multipath_dracut_conf_d }}eseries_multipath.conf"
  become: true
  register: dracut_modules

- name: Update initramfs image.
  ansible.builtin.command: dracut --force
  become: true
  when: dracut_modules['changed'] == True
  register: initramfs_update

# There are some cases where nvme_core will already be loaded and by default, native multipath is disabled.  We need to
#   check for this and reboot, so that the native nvme driver will claim nvme devices (and not device mapper).

- name: Import defaults from nvme
  ansible.builtin.include_vars: "../../nvme/defaults/main.yml"

- name: Read value of nvme_core multipath
  ansible.builtin.command: cat /sys/module/nvme_core/parameters/multipath
  become: true
  register: nvme_multipath_setting
  changed_when: false
  failed_when: false

- name: Reboot host to enable nvme multipath
  ansible.builtin.include_role:
    name: netapp_eseries.host.common
    tasks_from: reboot.yml
  vars:
    eseries_common_allow_host_reboot_reason: "nvme multipath is disabled. Reboot is required."
    nvme_native_multipath_default: |-
      {%- for module in eseries_nvme_kernel_modules 
          if module["name"] == "nvme_core" and module["parameters"] | regex_search("multipath=Y", ignorecase=true) -%}
        True
      {%- else -%}
        False
      {%- endfor -%}
  when: nvme_multipath_setting.stdout | default('') == 'N' and nvme_native_multipath_default
