#!/bin/sh -e
rt_tables=/etc/iproute2/rt_tables

update_rt_tables() {
  action=$1
  table=$2

  # Set rt_tables file lock
  exec 100>/var/tmp/~rt_tables.lock || exit 1
  flock 100 || exit 1

  case $action in
    up)
      if ! grep -qE "[0-9]+ *$table" $rt_tables; then
        rt_tables_numbers=$(grep "^[0-9]" $rt_tables | tr "\t" " " | cut -f 1 -d " ")
        for proposed_number in $(seq 1 252); do
          if ! echo $rt_tables_numbers | grep -qw "$proposed_number"; then
            echo "$proposed_number $table" >> $rt_tables
            break
          fi
        done
      fi
      ;;

    down)
      if grep -qE "[0-9]+ *$table" $rt_tables; then
        sed -i "/^[0-9]* *$table$/d" $rt_tables
      fi
      ;;
  esac

  # Clear rt_tables file lock
  flock -u 100
}

add_routes() {
  routes=$1
  table=$2

  while read line; do
    if ! ip route show table $table > /dev/null 2>&1 || ! ip route show table $table | grep -q "$line"; then
      ip route add $line table $table
    fi
  done <<< $routes
}

delete_routes() {
  routes=$1
  table=$2

  if ip route show table $table > /dev/null 2>&1; then
    while read line; do
      if ip route show table $table | grep -q "$line"; then
        ip route del $line table $table
      fi
    done <<< $routes
  fi
}

add_rules() {
  rules=$1
  while read line; do
    if ! ip rule show all | grep -q "$line"; then
      ip rule add $line
    fi
  done <<< $rules
}

delete_rules() {
  rules=$1
  while read line; do
    ip rule del $line
  done <<< $rules
}


interface=$1
action=$2
table=multihoming-{{ item['interface']['name'] }}
address={{ item['interface']['address'] | ansible.netcommon.ipaddr("address") }}
network={{ item['interface']['address'] | ansible.netcommon.ipaddr("network/prefix") }}

routes="default via $address dev $interface
$network dev $interface scope link src $address"

rules="from $address lookup $table
from all to $address lookup $table"

if [ $# -ge 2 ] && [ "$interface" = "{{ item['interface']['name'] }}" ]; then
  case $action in
    up)
      update_rt_tables up $table
      add_routes "$routes" $table
      add_rules "$rules"
      ;;
    down)
      delete_rules "$rules"
      delete_routes "$routes" $table
      update_rt_tables down $table
      ;;
  esac
fi

exit 0
