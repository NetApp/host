- name: Delete ifcfg-* files for IP over InfiniBand interfaces.
  ansible.builtin.file:
    state: absent
    path: "{{ eseries_ipoib_ifcfg_path }}ifcfg-{{ item['name'] }}"
  register: ifcfg
  loop: "{{ eseries_ipoib_interfaces }}"
  become: true

- name: Delete Network Manager dispatcher hooks for IP over InfiniBand interfaces.
  ansible.builtin.file:
    state: absent
    path: "{{ eseries_ipoib_network_manager_dispatcher_d }}{{ item }}"
  loop: "{{ hook_templates }}"
  become: true
  vars:
    hook_templates: |-
      {%- set hook_templates = [] -%}
      {%- for interface in eseries_ipoib_interfaces -%}
        {%- for template in interface['hook_templates'] | default(eseries_ipoib_default_hook_templates | default([])) -%}
          {%- set filename = template.split(".")[0] ~ "-" ~ interface["name"] -%}
          {%- if hook_templates.append(filename) -%}{%- endif -%}
        {%- endfor -%}
      {%- endfor -%}
      {{- hook_templates -}}

- name: Ensure gateway route exists for each InfiniBand iSER network interface (SUSE).
  ansible.builtin.file:
    state: absent
    path: "{{ eseries_ipoib_ifcfg_path }}ifroute-{{ item['name'] }}"
  loop: "{{ eseries_ipoib_interfaces }}"
  when: "(ansible_os_family | lower) == 'suse'"

- name: Bring InfiniBand iSER interface down using ifdown.
  ansible.builtin.command: ifdown {{ item['name'] }}
  register: ip_down
  changed_when: ip_down['rc'] != 0 and ip_down['stderr'] is not defined
  failed_when: false
  loop: "{{ eseries_ipoib_interfaces }}"
  become: true

- name: Flush InfiniBand iSER interface.
  ansible.builtin.command: ip address flush dev {{ item['name'] }}
  register: ip_flush
  changed_when: ip_flush['rc'] != 0 and ip_flush['stderr'] is not defined
  failed_when: false
  loop: "{{ eseries_ipoib_interfaces }}"
  become: true