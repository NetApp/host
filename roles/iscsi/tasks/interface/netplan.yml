- name: Ensure iSCSI interfaces have netplan configuration files.
  ansible.builtin.template:
    src: "{{ lookup('netapp_eseries.host.eseries_template_path', 'netplan/netplan.j2') }}"
    dest: "{{ eseries_iscsi_netplan_path }}99-eseries-ansible-{{ item['name'] }}.yaml"
  register: netplan
  loop: "{{ eseries_iscsi_interfaces }}"
  become: true

- name: Apply changes to Netplan
  ansible.builtin.command:
    cmd: netplan apply
  become: true
  when: netplan['changed']

- name: Get the link status for interface
  shell: ip -4 address show {{ item['name'] }} && ip -4 route show
  changed_when: false
  register: link_info
  loop: "{{ eseries_iscsi_interfaces }}"
  become: true

- name: Determine changed interfaces.
  set_fact:
    changed_interfaces: |-
      {%- set interfaces = [] -%}
      {%- for result in link_info["results"] -%}
        {%- if "state UP" not in result["stdout"] or "inet " ~ result["item"]["address"] not in result["stdout"] or
               ("mtu" in (result["item"].keys() | list) and "mtu " ~ result["item"]["mtu"] not in result["stdout"]) or
               ("gateway" in (result["item"].keys() | list) and result["item"]["gateway"] ~ " dev " ~ result["item"]["name"] in result["stdout"]) -%}
          {%- if interfaces.append(result["item"]["name"]) -%}{%- endif -%}
        {%- endif -%}
      {%- endfor -%}
      {{ interfaces | list }}

- name: Flush iSCSI interface.
  ansible.builtin.command: ip address flush {{ item }}
  loop: "{{ changed_interfaces }}"
  become: true

- name: Bring iSCSI interface up.
  ansible.builtin.command: ip link set {{ item }} up
  loop: "{{ changed_interfaces }}"
  become: true
