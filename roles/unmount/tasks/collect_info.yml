- name: Get multipath path information for each mapping to be removed.
  command:
    cmd: "multipathd show maps raw format '%w,%d,%n,%N,%v,%p'"
  register: multipathd_path_info
  changed_when: false
  failed_when: false
  become: true

#- for volume in initiator_volume_facts if eseries_unmount_volumes == "all_volumes" or eseries_unmount_volumes == ["all_volumes"] or volume["name"] in eseries_unmount_volumes
- name: Determine volumes to unmap.
  set_fact:
    unmapped_volume_info: |-
      {%- set mapped_info = [] -%}
      {%- set mapped_info_dict = {} -%}
      {%- if multipathd_path_info["rc"] == 0 -%}
        {%- for path_info in multipathd_path_info["stdout_lines"] if path_info | regex_search("NETAPP\s*,INF-01-00", ignorecase=True) -%}
          {%- set info = path_info.split(",") -%}

          {%- for volume_name in eseries_unmount_volumes if volume_name == "all_volumes" or volume_name == info[2] -%}

            {#- Add host information -#}
            {%- if volume_name not in (mapped_info_dict.keys() | list) -%}
              {%- if mapped_info_dict.update({volume_name: {"volume_info": {}, "array_credentials": {}, "volume_name": volume_name, "wwid": info[0],
                                                            "dev_mapper_path": "/dev/mapper/" ~ info[2], "blocks": [info[1]], "active_paths": info[3]}}) -%}{%- endif -%}
            {%- else -%}
              {%- if mapped_info_dict[volume_name]["blocks"].append(info[1]) -%}{%- endif -%}
            {%- endif -%}

            {#- Attempt to retrieve volume information -#}
            {%- for volume_info in initiator_volume_facts if info[0] | regex_search(volume_info["wwn"], ignorecase=True) or
                                                             info[0] | regex_search(volume_info["eui"], ignorecase=True) -%}
              {%- if mapped_info_dict[volume_name]["volume_info"].update(volume_info) -%}{%- endif -%}

              {%- set array_info = hostvars[volume_info['ansible_array_name']] -%}
              {%- set array_info_keys = array_info.keys() | list -%}
              {%- if "current_eseries_ssid" in array_info_keys -%}
                {%- if mapped_info_dict[volume_name]["array_credentials"].update({"ssid": array_info['current_eseries_ssid'],
                                                                             "api_url": array_info["current_eseries_api_url"],
                                                                             "api_username": array_info["current_eseries_api_username"] | default("admin"),
                                                                             "api_password": array_info["current_eseries_api_password"],
                                                                             "validate_certs": array_info["current_eseries_validate_certs"]}) -%}{%- endif -%}
              {%- elif "eseries_system_api_url" in array_info_keys and "eseries_system_password" in array_info_keys -%}
                {%- if mapped_info_dict[volume_name]["array_credentials"].update({"ssid": "1",
                                                                             "api_url": array_info["eseries_system_api_url"],
                                                                             "api_username": array_info["eseries_system_username"] | default("admin"),
                                                                             "api_password": array_info["eseries_system_password"],
                                                                             "validate_certs": array_info["eseries_validate_certs"] | default(omit)}) -%}{%- endif -%}
              {%- elif "eseries_proxy_ssid" in array_info_keys and "eseries_proxy_api_url" in array_info_keys and "eseries_proxy_api_password" in array_info_keys -%}
                {%- if mapped_info_dict[volume_name]["array_credentials"].update({"ssid": array_info["eseries_proxy_ssid"],
                                                                             "api_url": array_info["eseries_proxy_api_url"],
                                                                             "api_username": array_info["eseries_proxy_api_username"] | default("admin"),
                                                                             "api_password": array_info["eseries_proxy_api_password"],
                                                                             "validate_certs": array_info["eseries_validate_certs"] | default(omit)}) -%}{%- endif -%}
              {%- elif "eseries_api_url" in array_info_keys and "eseries_api_password" in array_info_keys -%}
                {%- if mapped_info_dict[volume_name]["array_credentials"].update({"ssid": array_info["eseries_ssid"] | default("1"),
                                                                             "api_url": array_info["eseries_api_url"],
                                                                             "api_username": array_info["eseries_api_username"] | default("admin"),
                                                                             "api_password": array_info["eseries_api_password"],
                                                                             "validate_certs": array_info["eseries_validate_certs"] | default(omit)}) -%}{%- endif -%}
              {%- endif -%}
            {%- endfor -%}
          {%- endfor -%}
        {%- endfor -%}

        {%- for key, value in mapped_info_dict.items() -%}
          {%- if mapped_info.append(value) -%}{%- endif -%}
        {%- endfor -%}
      {%- endif -%}
      {{ mapped_info }}
